"""
Django settings for ck project.

Generated by 'django-admin startproject' using Django 4.0.6.

For more information on this file, see
https://docs.djangoproject.com/en/4.0/topics/settings/

For the full list of settings and their values, see
https://docs.djangoproject.com/en/4.0/ref/settings/
"""

from pathlib import Path
import os

# Build paths inside the project like this: BASE_DIR / 'subdir'.
BASE_DIR = Path(__file__).resolve().parent.parent


# Quick-start development settings - unsuitable for production
# See https://docs.djangoproject.com/en/4.0/howto/deployment/checklist/

# SECURITY WARNING: keep the secret key used in production secret!
SECRET_KEY = 'django-insecure-mbc(pcjd(a3jpi4)elqy)1d8cu4*6p-ch9++j0!==28pm=-t$%'

# SECURITY WARNING: don't run with debug turned on in production!
DEBUG = True

ALLOWED_HOSTS = []


# Application definition

INSTALLED_APPS = [
    #我的应用
    'Survey',
    'company',
    'users',
    'product',
    'learning_logs',
    'comment',
    #第三方应用
    'ckeditor',
    'ckeditor_uploader',
    'bootstrap4',
    #'django_rename_app',
    'mptt',
    #为allauth新增
    'allauth',
    'allauth.account',
    'allauth.socialaccount',
    #默认的应用
    'django.contrib.admin',
    #为allauth新增
    'django.contrib.sites',
    'django.contrib.auth',
    'django.contrib.contenttypes',
    'django.contrib.sessions',
    'django.contrib.messages',
    'django.contrib.staticfiles',
     #为allauth新增第三方登录
    'allauth.socialaccount.providers.weibo',
    'allauth.socialaccount.providers.weixin',
]
#allauth设置
SITE_ID = 1
LOGIN_REDIRECT_URL= "/" #设置登录后跳转链接
ACCOUNT_LOGOUT_REDIRECT_URL ="/" #设置退出登录后跳转链接
ACCOUNT_LOGIN_ATTEMPTS_LIMIT =5 #登录尝试失败的次数
ACCOUNT_LOGIN_ATTEMPTS_TIMEOUT =300 #从上次失败的登录尝试，用户被禁止尝试登录的持续时间

#LOGIN_REDIRECT_URL = "/accounts/profile/"
ACCOUNT_AUTHENTICATION_METHOD = 'username_email'
# 要求用户注册时必须
ACCOUNT_EMAIL_REQUIRED = False
#allauth设置结束
MIDDLEWARE = [
    'django.middleware.security.SecurityMiddleware',
    'django.contrib.sessions.middleware.SessionMiddleware',
    'django.middleware.common.CommonMiddleware',
    'django.middleware.csrf.CsrfViewMiddleware',
    'django.contrib.auth.middleware.AuthenticationMiddleware',
    'django.contrib.messages.middleware.MessageMiddleware',
    'django.middleware.clickjacking.XFrameOptionsMiddleware',
]

ROOT_URLCONF = 'ck.urls'

TEMPLATES = [
    {
        'BACKEND': 'django.template.backends.django.DjangoTemplates',
        'DIRS': [os.path.join(BASE_DIR, 'templates' )],#
        'APP_DIRS': True,
        'OPTIONS': {
            'context_processors': [
                'django.template.context_processors.debug',
                'django.template.context_processors.request',
                'django.contrib.auth.context_processors.auth',
                'django.contrib.messages.context_processors.messages',
                 # `allauth` needs this from django
                'django.template.context_processors.request',
            ],
        },
    },
]
AUTHENTICATION_BACKENDS = [
    
    # Needed to login by username in Django admin, regardless of `allauth`
    'django.contrib.auth.backends.ModelBackend',

    # `allauth` specific authentication methods, such as login by e-mail
    #'allauth.account.auth_backends.AuthenticationBackend',
    
]

WSGI_APPLICATION = 'ck.wsgi.application'


# Database
# https://docs.djangoproject.com/en/4.0/ref/settings/#databases

DATABASES = {
    'default': {
        'ENGINE': 'django.db.backends.sqlite3',
        'NAME': BASE_DIR / 'db.sqlite3',
    }
}


# Password validation
# https://docs.djangoproject.com/en/4.0/ref/settings/#auth-password-validators

AUTH_PASSWORD_VALIDATORS = [
    {
        'NAME': 'django.contrib.auth.password_validation.UserAttributeSimilarityValidator',
    },
    {
        'NAME': 'django.contrib.auth.password_validation.MinimumLengthValidator',
    },
    {
        'NAME': 'django.contrib.auth.password_validation.CommonPasswordValidator',
    },
    {
        'NAME': 'django.contrib.auth.password_validation.NumericPasswordValidator',
    },
]


# Internationalization
# https://docs.djangoproject.com/en/4.0/topics/i18n/

LANGUAGE_CODE = 'zh-Hans'

TIME_ZONE = 'Asia/Shanghai'

#USE_I18N = True

#USE_TZ = True
#安装allahth后修改
USE_I18N = True

USE_L10N = True

USE_TZ = False


# Static files (CSS, JavaScript, Images)
# https://docs.djangoproject.com/en/4.0/howto/static-files/

STATIC_URL = 'static/'
if DEBUG == False: 
    STATIC_ROOT = os.path.join(BASE_DIR, 'static')
else:
   STATICFILES_DIRS = [
     os.path.join(BASE_DIR,"static")
   ]

MEDIA_URL = 'media/'  # 上传图片的路径
MEDIA_ROOT = os.path.join(BASE_DIR, 'media')  # 上传图片的根路径
#CK
CKEDITOR_UPLOAD_PATH = "uploads/"#文件保存为止，因为上边配置了media， 图片将保存至media/uploads下

# Default primary key field type
# https://docs.djangoproject.com/en/4.0/ref/settings/#default-auto-field
#我的设置
LOGIN_URL = 'users:login'
DEFAULT_AUTO_FIELD = 'django.db.models.BigAutoField'
CKEDITOR_CONFIGS = {
    # django-ckeditor默认使用default配置
    'default': {
        # 编辑器宽度自适应
        'width':'auto',
        'height':'300px',
        # tab键转换空格数
        'tabSpaces': 4,
        # 工具栏风格
        'toolbar': 'Custom',
        # 工具栏按钮
        'toolbar_Custom': [
                            ['div', 'Source', '-', 'Save', 'NewPage', 'Preview', '-', 'Templates'],
                     ['Cut', 'Copy', 'Paste', 'PasteText', 'PasteFromWord', '-', 
                     'Print', 'SpellChecker', 'Scayt'],
                     ['Undo', 'Redo', '-', 'Find', 'Replace', '-', 'SelectAll', 'RemoveFormat', '-', 
                     'Maximize','ShowBlocks', '-', 'Subscript', 'Superscript', "CodeSnippet"],  # 添加"CodeSnippet"到toolbar中
                     ['Form', 'Checkbox', 'Radio', 'TextField', 'Textarea', 'Select', 'Button', 'ImageButton',
                      'HiddenField'],
                     ['Bold', 'Italic', 'Underline', 'Strike', '-'],
                     ['NumberedList', 'BulletedList', '-', 'Outdent', 'Indent', 'Blockquote'],
                     ['JustifyLeft', 'JustifyCenter', 'JustifyRight', 'JustifyBlock'],
                     ['Link', 'Unlink', 'Anchor'],
                     ['Image', 'Flash', 'Table', 'HorizontalRule', 'Smiley', 'SpecialChar', 'PageBreak'],
                     ['Styles', 'Format', 'Font', 'FontSize'],
                     ['TextColor', 'BGColor']

        ],
        # 加入代码块插件
        'extraPlugins': ','.join(['codesnippet','image2']),
    },
    #评论
    'comment': {
        # 编辑器宽度自适应
        'width': 'auto',
        'height': '100px',
        # tab键转换空格数
        'tabSpaces': 4,
        # 工具栏风格
        'toolbar': 'Custom',
        # 工具栏按钮
        'toolbar_Custom': [
            # 表情 代码块
            ['Smiley', 'CodeSnippet'],
            # 字体风格
            ['Bold', 'Italic', 'Underline', 'RemoveFormat', 'Blockquote'],
            # 字体颜色
            ['TextColor', 'BGColor'],
            # 链接
            ['Link', 'Unlink'],
            # 列表
            ['NumberedList', 'BulletedList'],
        ],
        # 加入代码块插件
        'extraPlugins': ','.join(['codesnippet']),
    }

}